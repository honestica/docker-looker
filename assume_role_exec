#!/usr/bin/env python3
# https://aws.amazon.com/fr/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/
# https://docs.looker.com/setup-and-management/on-prem-mgmt/migrating-encryption
# https://docs.looker.com/setup-and-management/on-prem-mgmt/changing-encryption-keys

import boto3
import os
import sys
import uuid


role_arn = os.getenv('AWS_ROLE_ARN')
web_token_file = os.getenv('AWS_WEB_IDENTITY_TOKEN_FILE')

if not role_arn:
    sys.exit('Missing AWS_ROLE_ARN envvar.')

if not web_token_file:
    sys.exit('Missing AWS_WEB_IDENTITY_TOKEN_FILE envvar.')

web_token = open(web_token_file, 'r')

client = boto3.client('sts')
role = client.assume_role_with_web_identity(
    RoleArn=role_arn,
    RoleSessionName='looker' + uuid.uuid4().hex,
    WebIdentityToken=web_token.read(),
)

os.environ['AWS_ACCESS_KEY_ID'] = role['Credentials']['AccessKeyId']
os.environ['AWS_SECRET_ACCESS_KEY'] = role['Credentials']['SecretAccessKey']
os.environ['AWS_SESSION_TOKEN'] = role['Credentials']['SessionToken']
os.environ['AWS_SESSION_EXPIRATION'] = role['Credentials']['Expiration'].isoformat()

os.execvp(sys.argv[1], sys.argv[1:])
